{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGitfs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","fixed_height_downsampled","GifGridItem","className","src","width","alt","href","rel","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","image","i","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGtBC,mBAAS,IAHa,mBAGzCC,EAHyC,KAGlCC,EAHkC,KAoBhD,OACE,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACxBR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA2BO,OACzCN,EAAS,MAMX,SACE,uBAAOO,KAAK,OAAOR,MAAOA,EAAOS,SAfb,SAACN,GACvBF,EAASE,EAAEO,OAAOV,a,+BCKPW,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,yDACgDC,UAC5DH,GAFY,sDAIKI,MAAMF,GAJX,cAIRG,EAJQ,gBAKSA,EAAKC,OALd,uBAKNC,EALM,EAKNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,yBAAyBZ,QAVhC,kBAaPM,GAbO,4CAAH,sDCEAO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,MAAM,MAAMC,IAAKP,IAChC,mBAAGQ,KAAMlB,EAAKJ,OAAO,SAASuB,IAAI,aAAlC,SACE,mBAAGL,UAAU,aAAb,SAA2BJ,UCHtBU,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjC0B,OAAQ,GACRU,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACR3B,EAAQC,GAAU2B,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPZ,OAAQe,EACRL,SAAS,MAEV,UAEJ,CAACvB,IAEGwB,EDfqBM,CAAa9B,GAAjCa,EAD+B,EAC/BA,OAAQU,EADuB,EACvBA,QAEhB,OACE,qCACE,6BAAKvB,IACJuB,GAAW,aAEZ,qBAAKP,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACsB,EAAOC,GAAR,OACV,cAAC,EAAD,eAAyBD,GAAPC,YEKbC,EAfM,WAAO,IAAD,EACW9C,mBAAS,IADpB,mBAClBQ,EADkB,KACNT,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACCS,EAAWc,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCPtBkC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.875fb716.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  //#region states\r\n  const [value, setValue] = useState('');\r\n  //#endregion\r\n\r\n  //#region handlers\r\n  const handlerOnChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.trim().length > 2) {\r\n      setCategories((categories) => [value, ...categories]);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  return (\r\n    <form onSubmit={handlerSubmit}>\r\n      <input type=\"text\" value={value} onChange={handlerOnChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","const getGifs = async (category) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(\r\n    category\r\n  )}&api_key=rIi9ma7bAf1k6IBrO2AyxS4UpXyAf07F`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.fixed_height_downsampled.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} width=\"200\" alt={title}></img>\r\n      <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n        <p className=\"card-title\">{title}</p>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGitfs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && \"Loading...\"}\r\n\r\n      <div className=\"grid-gifs\">\r\n        {images.map((image, i) => (\r\n          <GifGridItem key={i} {...image} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    images: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          images: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}